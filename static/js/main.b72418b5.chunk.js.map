{"version":3,"sources":["firebase/firebase.js","firebase/firebase-creds.js","components/AddPackage.jsx","firebase/addToFirebase.js","components/Loader.jsx","components/PackageList.jsx","components/PackageTracker.jsx","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","firestore","AddPackage","useState","packageName","setPackageName","trackingNum","setTrackingNum","carrier","setCarrier","style","width","className","TextField","fullWidth","required","id","label","onChange","event","target","value","FormControl","InputLabel","Select","labelId","MenuItem","Button","onClick","name","uuidv4","uspsPackage","timestamp","Date","delivered","collection","doc","set","catch","error","console","log","addPackage","window","alert","variant","color","Loader","PackageList","loading","setLoading","packages","setPackages","deleteDialogOpen","setDeleteDialogOpen","packageToBeDeleted","setPackageToBeDeleted","useEffect","unsub","onSnapshot","snap","data","docs","map","generateTrackingURL","packageItem","handleDeleteClose","packageList","sort","a","b","toDate","reverse","sortPackagesByDate","length","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","key","scope","toLocaleDateString","rel","href","Checkbox","checked","update","handleDelivered","handleDeleteOpen","renderPackageList","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","delete","then","PackageTracker","Grid","container","direction","justify","alignItems","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b72418b5.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport { creds } from './firebase-creds'\n\nconst firebaseApp = firebase.initializeApp(creds);\n\nconst db = firebaseApp.firestore();\n\nexport { db };","export const creds = {\n  \"apiKey\": \"AIzaSyA8Nd3BWu8uuMjvn_lOuCvYtSIkicenw_s\",\n  \"authDomain\": \"package-tracker-fc29b.firebaseapp.com\",\n  \"databaseURL\": \"https://package-tracker-fc29b.firebaseio.com\",\n  \"projectId\": \"package-tracker-fc29b\",\n  \"storageBucket\": \"package-tracker-fc29b.appspot.com\",\n  \"messagingSenderId\": \"476804320370\",\n  \"appId\": \"1:476804320370:web:6420daba7c1315970886eb\"\n}","import React, { useState } from 'react';\nimport '../styles/AddPackage.css';\nimport { addPackage } from '../firebase/addToFirebase';\nimport {\n  Button,\n  TextField,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel\n} from '@material-ui/core';\n\nfunction AddPackage() {\n  const [packageName, setPackageName] = useState('');\n  const [trackingNum, setTrackingNum] = useState('');\n  const [carrier, setCarrier] = useState(\"USPS\");\n\n  const handleSelect = (event) => {\n    setCarrier(event.target.value);\n  }\n\n  const handlePackageName = (event) => {\n    setPackageName(event.target.value);\n  }\n\n  const handleTrackingNum = (event) => {\n    setTrackingNum(event.target.value);\n  }\n\n  const handleAddPackage = () => {\n    if (!packageName || !trackingNum || !carrier) {\n      window.alert(\"Please complete all fields.\");\n    } else {\n      addPackage(packageName, trackingNum, carrier)\n      // Clear fields\n      setPackageName('');\n      setTrackingNum('');\n      setCarrier('USPS');\n    }\n  }\n\n  return (\n    <div style={{width: \"27%\"}}>\n      <div className=\"addTitle\">\n        Add Package\n      </div>\n      <div>\n        <form className=\"formStyle\">\n          <div className=\"spaceBetweenFields\">\n            <TextField fullWidth required id=\"packageName\" label=\"Package name\" onChange={handlePackageName} value={packageName}/>\n          </div>\n          <div className=\"spaceBetweenFields\">\n            <TextField fullWidth required id=\"trackingNum\" label=\"Tracking number or Amazon order ID\" onChange={handleTrackingNum} value={trackingNum}/>\n          </div>\n          <div className=\"spaceBetweenFields\">\n            <FormControl required fullWidth={true}>\n              <InputLabel id=\"select-label\">Carrier</InputLabel>\n              <Select labelId=\"select-label\"\n              id=\"select\"\n              value={carrier}\n              onChange={handleSelect}\n              >\n                <MenuItem value=\"USPS\">USPS</MenuItem>\n                <MenuItem value=\"UPS\">UPS</MenuItem>\n                <MenuItem value=\"Fedex\">Fedex</MenuItem>\n                <MenuItem value=\"Amazon\">Amazon</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n        </form>\n      </div>\n      <Button onClick={handleAddPackage} variant=\"contained\" color=\"primary\">Add</Button>\n    </div>\n  );\n}\n\nexport default AddPackage;","// import firebase from 'firebase';\nimport { db } from './firebase';\nimport { v4 as uuidv4 }from 'uuid';\n\nexport const addPackage = (name, trackingNum, carrier) => {\n  const id = uuidv4();\n  const date = new Date();\n\n  const uspsPackage = {\n    id: id,\n    name: name,\n    timestamp: date,\n    carrier: carrier,\n    trackingNum: trackingNum,\n    delivered: false\n  };\n\n  db.collection(\"packages\").doc(id).set(uspsPackage)\n  .catch(error => {\n    console.log(`Error adding: ${error}`)\n  })\n}","import React from 'react';\nimport '../styles/Loader.css';\n\nfunction Loader() {\n\n  return (\n    <div>\n      <div className=\"loader\"></div>\n    </div>\n\n  )\n}\n\nexport default Loader;","import React, { useState, useEffect } from 'react';\nimport { db } from '../firebase/firebase';\nimport Loader from './Loader';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Checkbox,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\n\nfunction PackageList() {\n  const [loading, setLoading] = useState(true);\n  const [packages, setPackages] = useState([]);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [packageToBeDeleted, setPackageToBeDeleted] = useState('');\n\n  useEffect(() => {\n    const unsub = db.collection('packages').onSnapshot(snap => {\n      const data = snap.docs.map(doc => doc.data())\n      setPackages(data);\n      setLoading(false);\n    });\n\n    return () => unsub();\n  }, []);\n\n  // Reverse chronological order for packages\n  const sortPackagesByDate = () => {\n    const packageList = packages;\n\n    packageList.sort(function compare(a, b) {\n      const dateA = new Date(a.timestamp.toDate());\n      const dateB = new Date(b.timestamp.toDate());\n      return dateA - dateB;\n    })\n\n    return packageList.reverse();\n  }\n\n  // Use the tracking number to generate a tracking URL\n  const generateTrackingURL = (packageItem) => {\n    const carrier = packageItem.carrier;\n    const trackingNum = packageItem.trackingNum;\n\n    switch(carrier) {\n      case 'USPS':\n        return `https://tools.usps.com/go/TrackConfirmAction?tLabels=${trackingNum}`;\n      case 'UPS':\n        return `https://www.ups.com/track?loc=null&tracknum=${trackingNum}`;\n      case 'Fedex':\n        return `https://fedex.com/apps/fedextrack/index.html?tracknumbers=${trackingNum}`;\n      case 'Amazon':\n        return `https://www.amazon.com/gp/your-account/order-details/ref=ppx_yo_dt_b_order_details_o00?ie=UTF8&orderID=${trackingNum}`\n      default:\n        return `http://doge2048.com/`;\n    }\n  }\n\n  // Change delivered status of a package\n  const handleDelivered = (packageItem) => {\n    db.collection('packages').doc(packageItem.id).update({\"delivered\": !packageItem.delivered})\n    .catch(error => {\n      console.log(`Error in changing package delivered status: ${error}`)\n    });\n  }\n\n  // Open dialog to confirm deletion, save selected item in state to access it\n  const handleDeleteOpen = (packageItem) => {\n    setDeleteDialogOpen(true);\n    setPackageToBeDeleted(packageItem);\n  }\n\n  // Reset after closing dialog\n  const handleDeleteClose = () => {\n    setDeleteDialogOpen(false);\n    setPackageToBeDeleted('');\n  }\n\n  // Delete package and close dialog\n  const handleDeletePackage = () => {\n    db.collection('packages').doc(packageToBeDeleted.id).delete()\n    .then(() =>{\n      handleDeleteClose();\n    })\n    .catch(error => {\n      console.log(`Error in deleting a package: ${error}`)\n    })\n  }\n\n  const renderPackageList = () => {\n    const packageList = sortPackagesByDate();\n\n    if (packageList.length < 1)\n      return(<div>You have no packages saved!</div>);\n    else\n      return (\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Package Name</TableCell>\n                <TableCell>Carrier</TableCell>\n                <TableCell>Date Added</TableCell>\n                <TableCell>Tracking</TableCell>\n                <TableCell>Delivered</TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                packageList.map((packageItem) => (\n                  <TableRow key={packageItem.id}>\n                    <TableCell component=\"th\" scope=\"row\">{packageItem.name}</TableCell>\n                    <TableCell>{packageItem.carrier}</TableCell>\n                    <TableCell>{(new Date(packageItem.timestamp.toDate()).toLocaleDateString())}</TableCell>\n                    <TableCell><a target=\"_blank\" rel=\"noopener noreferrer\" href={generateTrackingURL(packageItem)}>Track here</a></TableCell>\n                    <TableCell>{<Checkbox checked={packageItem.delivered} onChange={() => handleDelivered(packageItem)} value={packageItem.id} />}</TableCell>\n                    <TableCell><Button onClick={() => handleDeleteOpen(packageItem)} variant=\"contained\" color=\"secondary\">DELETE</Button></TableCell>\n                  </TableRow>\n                ))\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      );\n  }\n\n  return (\n    loading ? <Loader /> :\n    <div>\n      {renderPackageList()}\n      <Dialog open={deleteDialogOpen} onClose={handleDeleteClose}>\n        <DialogTitle>Delete Confirmation</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete '{packageToBeDeleted.name}'?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteClose} color=\"primary\">Cancel</Button>\n          <Button onClick={handleDeletePackage}>Delete</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PackageList;","import React from 'react';\nimport '../styles/PackageTracker.css';\nimport { Grid } from '@material-ui/core';\nimport AddPackage from './AddPackage';\nimport PackageList from './PackageList';\n\nfunction PackageTracker() {\n  return (\n    <div>\n      <div className='centertitle'>\n        Package Tracker\n      </div>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-evenly\"\n        alignItems=\"baseline\"\n      >\n          <AddPackage />\n          <PackageList />\n      </Grid>\n    </div>\n  );\n}\n\nexport default PackageTracker;","import React from 'react';\nimport PackageTracker from './components/PackageTracker';\nimport './index.css'\n\nfunction App() {\n  return (\n    <div>\n      <PackageTracker />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}