{"version":3,"sources":["firebase/firebase.js","firebase/firebaseCreds.js","components/AddPackage.jsx","firebase/addToFirebase.js","components/Loader.jsx","components/PackageList.jsx","components/PackageTracker.jsx","App.js","serviceWorker.js","password.js","components/Login.jsx","components/FourOhFour.jsx","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","upsRegex","RegExp","uspsRegex","AddPackage","props","useState","packageName","setPackageName","trackingNum","setTrackingNum","carrier","setCarrier","isDeleteDialogOpen","setIsDeleteDialogOpen","handleDeleteAllPackages","packages","forEach","element","delivered","collection","doc","id","delete","catch","error","console","log","handleDeleteDialogClose","className","TextField","fullWidth","required","label","onChange","event","target","value","match","length","RadioGroup","InputLabel","FormControlLabel","control","Radio","color","size","Button","onClick","name","uuidv4","uspsPackage","timestamp","Date","set","addPackage","window","alert","variant","disableElevation","style","fontWeight","localStorage","removeItem","location","reload","float","marginTop","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Loader","PackageList","generateTrackingURL","packageItem","loading","packageList","sort","a","b","toDate","reverse","sortPackagesByDate","Grid","container","item","xs","Table","TableHead","TableRow","TableCell","align","TableBody","map","key","borderBottom","rel","href","Checkbox","checked","update","handleDelivered","renderPackageList","theme","createTheme","typography","fontFamily","palette","primary","main","secondary","PackageTracker","setLoading","setPackages","useEffect","unsub","onSnapshot","snap","data","docs","getItem","ThemeProvider","direction","justify","alignItems","to","App","Boolean","hostname","authPassword","Login","password","setPassword","isPasswordInvalid","setIsPasswordInvalid","onSubmit","setItem","preventDefault","type","newPass","FourOhFour","ReactDOM","render","StrictMode","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.84a0a3f9.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport { creds } from \"./firebaseCreds\";\n\nconst firebaseApp = firebase.initializeApp(creds);\n\nconst db = firebaseApp.firestore();\n\nexport { db };\n","export const creds = {\n  apiKey: \"AIzaSyA8Nd3BWu8uuMjvn_lOuCvYtSIkicenw_s\",\n  authDomain: \"package-tracker-fc29b.firebaseapp.com\",\n  databaseURL: \"https://package-tracker-fc29b.firebaseio.com\",\n  projectId: \"package-tracker-fc29b\",\n  storageBucket: \"package-tracker-fc29b.appspot.com\",\n  messagingSenderId: \"476804320370\",\n  appId: \"1:476804320370:web:6420daba7c1315970886eb\",\n};\n","import React, { useState } from \"react\";\nimport \"../styles/AddPackage.css\";\nimport { addPackage } from \"../firebase/addToFirebase\";\nimport { db } from \"../firebase/firebase\";\nimport {\n  Button,\n  TextField,\n  InputLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\n\n// https://stackoverflow.com/questions/619977/regular-expression-patterns-for-tracking-numbers\n// https://regexr.com/3e61u\n// fedex currently not able to match\nconst upsRegex = new RegExp(\n  /\\b(1Z ?[0-9A-Z]{3} ?[0-9A-Z]{3} ?[0-9A-Z]{2} ?[0-9A-Z]{4} ?[0-9A-Z]{3} ?[0-9A-Z]|[\\dT]\\d\\d\\d ?\\d\\d\\d\\d ?\\d\\d\\d)\\b/\n);\nconst uspsRegex = new RegExp(\n  /((\\d{4})(\\s?\\d{4}){4}\\s?\\d{2})|((\\d{2})(\\s?\\d{3}){2}\\s?\\d{2})|((\\D{2})(\\s?\\d{3}){3}\\s?\\D{2})/\n);\n\nconst AddPackage = (props) => {\n  const [packageName, setPackageName] = useState(\"\");\n  const [trackingNum, setTrackingNum] = useState(\"\");\n  const [carrier, setCarrier] = useState(\"\");\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n\n  const handleSelect = (event) => {\n    setCarrier(event.target.value);\n  };\n\n  const handlePackageName = (event) => {\n    setPackageName(event.target.value);\n  };\n\n  const handleTrackingNum = (event) => {\n    const trackingNum = event.target.value;\n    setTrackingNum(trackingNum);\n\n    // console.log(trackingNum.match(upsRegex));\n\n    // Try to detect carrier\n    // ups\n    if (\n      trackingNum.match(upsRegex) != null &&\n      trackingNum.match(upsRegex).length > 0\n    ) {\n      setCarrier(\"UPS\");\n    }\n    // usps\n    if (\n      trackingNum.match(uspsRegex) != null &&\n      trackingNum.match(uspsRegex).length > 0\n    ) {\n      setCarrier(\"USPS\");\n    }\n  };\n\n  const handleAddPackage = () => {\n    if (!packageName || !trackingNum || !carrier) {\n      window.alert(\"Please complete all fields.\");\n    } else {\n      addPackage(packageName, trackingNum, carrier);\n      // Clear fields\n      setPackageName(\"\");\n      setTrackingNum(\"\");\n      setCarrier(\"\");\n    }\n  };\n\n  // Remove localstorage and refresh\n  const handleLogOut = () => {\n    localStorage.removeItem(\"packagetracker\");\n    window.location.reload();\n  };\n\n  // Delete all checked/delivered items\n  const handleDeleteAllPackages = () => {\n    props.packages.forEach((element) => {\n      if (element.delivered) {\n        db.collection(\"packages\")\n          .doc(element.id)\n          .delete()\n          .catch((error) => {\n            console.log(`Error in deleting a package: ${error}`);\n          });\n      }\n    });\n    handleDeleteDialogClose();\n  };\n\n  const handleDeleteDialogOpen = () => {\n    setIsDeleteDialogOpen(true);\n  };\n\n  const handleDeleteDialogClose = () => {\n    setIsDeleteDialogOpen(false);\n  };\n\n  const deleteDialog = () => {\n    return (\n      <Dialog open={isDeleteDialogOpen} onClose={handleDeleteDialogClose}>\n        <DialogTitle>Delete Confirmation</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete all checked packages?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteDialogClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleDeleteAllPackages}>Delete</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n  return (\n    <div className=\"addPackageContainer\">\n      <div className=\"addTitle\">Add Package</div>\n      <div>\n        <form className=\"formStyle\">\n          <div className=\"spaceBetweenFields\">\n            <TextField\n              fullWidth\n              required\n              id=\"packageName\"\n              label=\"Package name\"\n              onChange={handlePackageName}\n              value={packageName}\n            />\n          </div>\n          <div className=\"spaceBetweenFields\">\n            <TextField\n              fullWidth\n              required\n              id=\"trackingNum\"\n              label=\"Tracking number\"\n              onChange={handleTrackingNum}\n              value={trackingNum}\n            />\n          </div>\n          <div className=\"moreSpaceBetweenFields\">\n            <RadioGroup value={carrier} onChange={handleSelect}>\n              <InputLabel id=\"select-label\">Select a carrier:</InputLabel>\n              <FormControlLabel\n                value=\"Amazon\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Amazon (use Order ID number)\"\n              />\n              <FormControlLabel\n                value=\"DHL\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"DHL\"\n              />\n              <FormControlLabel\n                value=\"Fedex\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Fedex\"\n              />\n              <FormControlLabel\n                value=\"UPS\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"UPS\"\n              />\n              <FormControlLabel\n                value=\"USPS\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"USPS\"\n              />\n            </RadioGroup>\n          </div>\n        </form>\n      </div>\n      <div>\n        <Button\n          onClick={handleAddPackage}\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n          style={{ fontWeight: \"bold\" }}\n        >\n          Add Package\n        </Button>\n        <Button\n          onClick={handleLogOut}\n          variant=\"contained\"\n          color=\"secondary\"\n          disableElevation\n          style={{ fontWeight: \"bold\", float: \"right\" }}\n        >\n          Log Out\n        </Button>\n      </div>\n      <Button\n        onClick={handleDeleteDialogOpen}\n        variant=\"contained\"\n        color=\"secondary\"\n        disableElevation\n        style={{ fontWeight: \"bold\", float: \"right\", marginTop: \"25px\" }}\n      >\n        Delete Checked Items\n      </Button>\n      {deleteDialog()}\n    </div>\n  );\n};\n\nexport default AddPackage;\n","// import firebase from 'firebase';\nimport { db } from \"./firebase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addPackage = (name, trackingNum, carrier) => {\n  const id = uuidv4();\n  const date = new Date();\n\n  const uspsPackage = {\n    id: id,\n    name: name,\n    timestamp: date,\n    carrier: carrier,\n    trackingNum: trackingNum,\n    delivered: false,\n  };\n\n  db.collection(\"packages\")\n    .doc(id)\n    .set(uspsPackage)\n    .catch((error) => {\n      console.log(`Error adding: ${error}`);\n    });\n};\n","import React from \"react\";\nimport \"../styles/Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div>\n      <div className=\"loader\"></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { db } from \"../firebase/firebase\";\nimport Loader from \"./Loader\";\nimport \"../styles/PackageList.css\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Checkbox,\n  Grid,\n} from \"@material-ui/core\";\n\nconst PackageList = (props) => {\n  // Reverse chronological order for packages\n  const sortPackagesByDate = () => {\n    const packageList = props.packages;\n\n    packageList.sort(function compare(a, b) {\n      const dateA = new Date(a.timestamp.toDate());\n      const dateB = new Date(b.timestamp.toDate());\n      return dateA - dateB;\n    });\n\n    return packageList.reverse();\n  };\n\n  // Use the tracking number to generate a tracking URL\n  const generateTrackingURL = (packageItem) => {\n    const carrier = packageItem.carrier;\n    const trackingNum = packageItem.trackingNum;\n\n    switch (carrier) {\n      case \"USPS\":\n        return `https://tools.usps.com/go/TrackConfirmAction?tLabels=${trackingNum}`;\n      case \"UPS\":\n        return `https://www.ups.com/track?loc=null&tracknum=${trackingNum}`;\n      case \"Fedex\":\n        return `https://fedex.com/apps/fedextrack/index.html?tracknumbers=${trackingNum}`;\n      case \"Amazon\":\n        return `https://www.amazon.com/gp/your-account/order-details/ref=ppx_yo_dt_b_order_details_o00?ie=UTF8&orderID=${trackingNum}`;\n      case \"DHL\":\n        return `https://www.dhl.com/en/express/tracking.html?AWB=${trackingNum}`;\n      default:\n        return `http://doge2048.com/`;\n    }\n  };\n\n  // Change delivered status of a package\n  const handleDelivered = (packageItem) => {\n    db.collection(\"packages\")\n      .doc(packageItem.id)\n      .update({ delivered: !packageItem.delivered })\n      .catch((error) => {\n        console.log(`Error in changing package delivered status: ${error}`);\n      });\n  };\n\n  const renderPackageList = () => {\n    const packageList = sortPackagesByDate();\n\n    if (packageList.length < 1) return <div>You have no packages saved!</div>;\n    else\n      return (\n        <Grid container>\n          <Grid item xs={12}>\n            <Table className=\"tableContainer\">\n              <TableHead>\n                <TableRow>\n                  <TableCell className=\"tableCell\" align=\"center\">\n                    Name\n                  </TableCell>\n                  <TableCell className=\"tableCell\" align=\"center\">\n                    Carrier\n                  </TableCell>\n                  <TableCell className=\"tableCell\" align=\"center\">\n                    Tracking\n                  </TableCell>\n                  <TableCell className=\"tableCell\" align=\"center\">\n                    Delivered\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {packageList.map((packageItem) => (\n                  <TableRow\n                    key={packageItem.id}\n                    className={\n                      packageItem.delivered ? \"deliveredRow\" : \"inProgressRow\"\n                    }\n                  >\n                    <TableCell\n                      style={{ borderBottom: \"none\", fontWeight: \"1000\" }}\n                    >\n                      {packageItem.name}\n                    </TableCell>\n                    <TableCell style={{ borderBottom: \"none\" }} align=\"center\">\n                      {packageItem.carrier}\n                    </TableCell>\n                    <TableCell style={{ borderBottom: \"none\" }} align=\"center\">\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={generateTrackingURL(packageItem)}\n                      >\n                        Track here\n                      </a>\n                    </TableCell>\n                    <TableCell style={{ borderBottom: \"none\" }} align=\"center\">\n                      {\n                        <Checkbox\n                          checked={packageItem.delivered}\n                          onChange={() => handleDelivered(packageItem)}\n                          value={packageItem.id}\n                        />\n                      }\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Grid>\n        </Grid>\n      );\n  };\n\n  return props.loading ? <Loader /> : <div>{renderPackageList()}</div>;\n};\n\nexport default PackageList;\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/PackageTracker.css\";\nimport { Grid } from \"@material-ui/core\";\nimport AddPackage from \"./AddPackage\";\nimport PackageList from \"./PackageList\";\nimport { db } from \"../firebase/firebase\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { Redirect } from \"react-router-dom\";\n\nconst muiFont = \"'Gotu', sans-serif\";\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: muiFont,\n  },\n  palette: {\n    primary: {\n      main: \"#b3e5fc\",\n    },\n    secondary: {\n      main: \"#ff8a65\",\n    },\n  },\n});\n\nconst PackageTracker = () => {\n  const [loading, setLoading] = useState(true);\n  const [packages, setPackages] = useState([]);\n\n  // Fetch data from store\n  useEffect(() => {\n    const unsub = db.collection(\"packages\").onSnapshot((snap) => {\n      const data = snap.docs.map((doc) => doc.data());\n      setPackages(data);\n      setLoading(false);\n    });\n\n    return () => unsub();\n  }, []);\n\n  if (!localStorage.getItem(\"packagetracker\")) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"centertitle\">Package Tracker</div>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-evenly\"\n        alignItems=\"baseline\"\n      >\n        <AddPackage packages={packages} />\n        <div className=\"packageList\">\n          <PackageList packages={packages} loading={loading} />\n        </div>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default PackageTracker;\n","import React from \"react\";\nimport PackageTracker from \"./components/PackageTracker\";\nimport \"./index.css\";\n\nconst App = () => {\n  return (\n    <div>\n      <PackageTracker />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export const authPassword = {\n  password: \"cacciatore\",\n};\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { authPassword } from \"../password\";\nimport \"../styles/Login.css\";\n\nconst Login = () => {\n  const [password, setPassword] = useState(\"\");\n  const [isPasswordInvalid, setIsPasswordInvalid] = useState(false);\n\n  const handlePasswordFormChange = (event) => {\n    let newPass = event.target.value;\n    setPassword(newPass);\n  };\n\n  const handleLogin = (event) => {\n    if (password === authPassword.password) {\n      localStorage.setItem(\"packagetracker\", \"token\");\n      window.location.reload();\n    } else {\n      setIsPasswordInvalid(true);\n      event.preventDefault();\n    }\n  };\n\n  if (localStorage.getItem(\"packagetracker\") === \"token\") {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"centerLogin\">\n      <form onSubmit={handleLogin}>\n        <h1>Please sign in</h1>\n        <div>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={handlePasswordFormChange}\n          />\n          <input type=\"submit\" value=\"Submit\" />\n        </div>\n      </form>\n      {isPasswordInvalid && (\n        <p className=\"passwordIncorrect\">password incorrect</p>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport \"../styles/Login.css\";\n\nconst FourOhFour = () => {\n  return (\n    <div className=\"centerLogin\">\n      <h1>404 - page not found</h1>\n    </div>\n  );\n};\n\nexport default FourOhFour;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport FourOhFour from \"./components/FourOhFour\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route component={FourOhFour} />\n      </Switch>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}